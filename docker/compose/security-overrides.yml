version: '3.8'

services:
  q2-platform:
    build:
      context: ../..
      dockerfile: docker/security/rootless/Dockerfile
    container_name: q2-platform-secure
    restart: unless-stopped
    
    # Security configurations
    security_opt:
      - no-new-privileges:true
      - apparmor:q2-platform-profile
      - seccomp:./docker/security/seccomp/config.json
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    
    # Network security
    networks:
      - q2-secure-network
    
    # Environment variables from secure files
    env_file:
      - ../../.env.secure/.env.production
    
    # Read-only root filesystem
    read_only: true
    
    # Temporary filesystems for writable areas
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
      - /var/tmp:noexec,nosuid,size=50m
    
    # Volume mounts with security options
    volumes:
      - logs-volume:/app/logs:rw,noexec,nosuid
      - certs-volume:/app/certs:ro,noexec,nosuid
    
    # Port mapping (only expose necessary ports)
    ports:
      - "3000:3000"
    
    # Health check
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=q2-platform"
    
    depends_on:
      - redis-secure
      - postgres-secure

  redis-secure:
    image: redis:7-alpine
    container_name: q2-redis-secure
    restart: unless-stopped
    
    # Security configurations
    security_opt:
      - no-new-privileges:true
    
    # Run as non-root user
    user: "999:999"
    
    # Read-only root filesystem
    read_only: true
    
    # Temporary filesystems
    tmpfs:
      - /tmp:noexec,nosuid,size=50m
    
    # Volume for data persistence
    volumes:
      - redis-data:/data:rw,noexec,nosuid
    
    # Redis configuration with security settings
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD}
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
      --rdbcompression yes
      --rdbchecksum yes
      --stop-writes-on-bgsave-error yes
      --tcp-keepalive 300
      --timeout 300
    
    networks:
      - q2-secure-network
    
    # Health check
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3

  postgres-secure:
    image: postgres:15-alpine
    container_name: q2-postgres-secure
    restart: unless-stopped
    
    # Security configurations
    security_opt:
      -:
    image: postgres:15-alpine
    container_name: q2-postgres-secure
    restart: unless-stopped
    
    # Security configurations
    security_opt:
      - no-new-privileges:true
    
    # Run as postgres user
    user: "70:70"
    
    # Environment variables
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    
    # Volume for data persistence
    volumes:
      - postgres-data:/var/lib/postgresql/data:rw,noexec,nosuid
      - ./scripts/security/db-init:/docker-entrypoint-initdb.d:ro
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M
    
    networks:
      - q2-secure-network
    
    # Health check
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 5s
      retries: 3

networks:
  q2-secure-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: q2-secure-br
    ipam:
      config:
        - subnet: 172.20.0.0/16
    # Enable network isolation
    internal: false
    attachable: false

volumes:
  logs-volume:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs
  
  certs-volume:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./certs
  
  redis-data:
    driver: local
  
  postgres-data:
    driver: local
